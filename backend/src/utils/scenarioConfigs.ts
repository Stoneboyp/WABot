// utils/scenarioConfigs.ts

import { SessionData } from "../types";

type Scenario = SessionData["scenario"];

type ScenarioConfig = {
  required: (keyof SessionData)[];
  buildConfirmation: (session: SessionData) => string;
  buildFinalConfirmation?: (session: SessionData) => string;
  keywords: string[];
};

export const scenarioConfigs: Record<
  "repair" | "cartridge" | "purchase",
  ScenarioConfig
> = {
  cartridge: {
    keywords: ["–∑–∞–ø—Ä–∞–≤–∫–∞", "–∫–∞—Ä—Ç—Ä–∏–¥–∂", "—Ç–æ–Ω–µ—Ä"],
    required: ["model", "count", "address"],
    buildConfirmation: (session) =>
      `üìù –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É: –∑–∞–ø—Ä–∞–≤–∫–∞ ${session.count} –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π ${session.model} –ø–æ –∞–¥—Ä–µ—Å—É ${session.address}. –í—Å—ë –≤–µ—Ä–Ω–æ?`,
    buildFinalConfirmation: (session) =>
      `‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É ${session.address} –¥–ª—è –∑–∞–ø—Ä–∞–≤–∫–∏ ${session.count} –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π ${session.model}.`,
  },
  repair: {
    keywords: [
      "—Ä–µ–º–æ–Ω—Ç",
      "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
      "—Å–ª–æ–º–∞–ª—Å—è",
      "–Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è",
      "—á–∏–Ω–∏—Ç—å",
      "–Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç",
    ],
    required: ["deviceType", "problem", "address"],
    buildConfirmation: (session) =>
      `üõ†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É: —Ä–µ–º–æ–Ω—Ç ${session.deviceType}, –ø—Ä–æ–±–ª–µ–º–∞: "${session.problem}", –∞–¥—Ä–µ—Å: ${session.address}. –í—Å—ë –≤–µ—Ä–Ω–æ?`,
    buildFinalConfirmation: (session) =>
      `‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç ${session.deviceType} –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞. –ú—ã –ø—Ä–∏–µ–¥–µ–º –ø–æ –∞–¥—Ä–µ—Å—É ${session.address} –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è: "${session.problem}".`,
  },
  purchase: {
    keywords: ["–∫—É–ø–∏—Ç—å", "–∑–∞–∫–∞–∑–∞—Ç—å", "–ø—Ä–æ–¥–∞–∂–∞", "–¥–æ—Å—Ç–∞–≤–∫–∞", "–Ω—É–∂–µ–Ω", "—Ö–æ—á—É"],
    required: ["product", "model", "address"],
    buildConfirmation: (session) =>
      `üõí –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É: –ø–æ–∫—É–ø–∫–∞ ${session.product} (${session.model}) –ø–æ –∞–¥—Ä–µ—Å—É ${session.address}. –í—Å—ë –≤–µ—Ä–Ω–æ?`,
    buildFinalConfirmation: (session) =>
      `‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É ${session.product} (${session.model}) –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É ${session.address}.`,
  },
};
