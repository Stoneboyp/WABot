// // scenarios/repair.ts
// import { Bot } from "grammy";
// import { MyContext } from "../types";
// import { saveRepairRequest } from "../utils/saveRepairRequest";
// import { resetSession } from "../utils/sessions";

// export function setupRepairScenario(bot: Bot<MyContext>) {
//   bot.hears("üõ†Ô∏è –†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏", async (ctx) => {
//     ctx.session.scenario = "repair";
//     ctx.session.step = "type";

//     await ctx.reply("–ö–∞–∫–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–º–æ–Ω—Ç–∞?", {
//       reply_markup: {
//         keyboard: [["–ü—Ä–∏–Ω—Ç–µ—Ä/–ú–§–£"], ["–ö–æ–º–ø—å—é—Ç–µ—Ä"], ["–°–µ—Ä–≤–µ—Ä"], ["–î—Ä—É–≥–æ–µ"]],
//         resize_keyboard: true,
//       },
//     });
//   });
// }

// export async function handleRepairSteps(ctx: MyContext) {
//   const text = ctx.message?.text?.toLowerCase() || "";

//   if (["–æ—Ç–º–µ–Ω–∞", "–Ω–µ —Ö–æ—á—É", "–Ω–µ—Ç", "—Å—Ç–æ–ø"].includes(text)) {
//     await ctx.reply("–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ.");
//     return resetSession(ctx);
//   }

//   switch (ctx.session.step) {
//     case "type":
//       ctx.session.deviceType = ctx.message?.text || "";
//       ctx.session.step = "problem";
//       await ctx.reply("–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:");
//       break;

//     case "problem":
//       ctx.session.problem = ctx.message?.text || "";
//       ctx.session.step = "contact";
//       await ctx.reply("–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏:", {
//         reply_markup: { remove_keyboard: true },
//       });
//       break;

//     case "contact":
//       ctx.session.contact = ctx.message?.text || "";

//       // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
//       await ctx.reply(
//         `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:\n–¢–∏–ø: ${ctx.session.deviceType}\n–ü—Ä–æ–±–ª–µ–º–∞: ${ctx.session.problem}\n–ö–æ–Ω—Ç–∞–∫—Ç: ${ctx.session.contact}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏ (–¥–∞/–Ω–µ—Ç)`
//       );
//       ctx.session.step = "confirm";
//       break;

//     case "confirm":
//       if (text === "–¥–∞") {
//         await saveRepairRequest(ctx);
//         await ctx.reply(
//           "‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç."
//         );
//       } else {
//         await ctx.reply("–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ.");
//       }
//       resetSession(ctx);
//       break;
//   }
// }
